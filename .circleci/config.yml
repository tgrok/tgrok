# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  node: circleci/node@5.0.2
  macos: circleci/macos@2
  ruby: circleci/ruby@1.2.0
  android: circleci/android@1.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-web:
    docker:
      - image: cimg/node:16.15.0
    steps:
      - checkout
      - node/install:
          install-yarn: true
      - run: yarn install --frozen-lockfile
      - run: yarn lint
      - run: yarn build:types
      - run: yarn build:prod
      - run: cd packages/gui && yarn build
      - persist_to_workspace:
          root: ~/project
          paths:
            - packages/*/dist
            - packages/*/index.d.ts
            - packages/gui/build

  build-desktop:
    macos:
      xcode: 13.2.1
    environment:
      FL_OUTPUT_DIR: output
    steps:
      - checkout:
          path: ~/project
      - node/install:
          install-yarn: true
      - attach_workspace:
          at: ~/project
      - run: yarn install --frozen-lockfile
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}-3
      - run: cd packages/desktop && yarn build -mwl
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}-3
          paths:
            - ~/Library/Caches/electron
            - ~/Library/Caches/electron-builder
      - run:
          name: Copy Artifacts
          command: |
            mkdir artifacts
            cp packages/desktop/dist_electron/*.dmg artifacts/
            cp packages/desktop/dist_electron/*.zip artifacts/
            cp packages/desktop/dist_electron/*.snap artifacts/
            cp packages/desktop/dist_electron/*.AppImage artifacts/
            cp packages/desktop/dist_electron/*.exe artifacts/
      - store_artifacts:
          path: artifacts

#  build-ios:
#    working_directory: ~/project/packages/ios
#    macos:
#      xcode: 13.3.1
#    environment:
#      FL_OUTPUT_DIR: output
#    steps:
#      - checkout:
#          path: ~/project
#      - node/install:
#          install-yarn: true
#          node-version: '16.13'
#      - attach_workspace:
#          at: ~/project
#      # - restore_cache:
#      #     key: pods-v1-{{ checksum "packages/ios/Podfile.lock" }}-{{ arch }}
#      - run: pod install
#      # - save_cache:
#      #     key: pods-v1-{{ checksum "packages/ios/Podfile.lock" }}-{{ arch }}
#      #     paths:
#      #       - packages/ios/Pods
#      - run: gem install bundler && bundle install
#      - run: yarn lint
#      - run: yarn test
#      # - store_artifacts:
#      #     path: output
#      - store_test_results:
#          path: output/scan/report.junit

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  buile-and-test:
    jobs:
      - build-web
#      - build-ios:
#          requires:
#            - build-web
      - build-desktop:
          requires:
            - build-web
          filters:
            branches:
              only:
                - main
                - dev-desktop
